// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int    @id @default(autoincrement())
  nome  String
  email String @unique
  senha String

  adotante Adotante? @relation("UserAdotante")
  ong      Ong?      @relation("UserOng")
}

model Adotante {
  id    Int    @id
  cpf   String

  user       User        @relation("UserAdotante", fields: [id], references: [id])
  adocoes    Adocao[]    @relation("AdotanteAdocoes")
  formularios Formulario[]
}

model Ong {
  id       Int    @id
  cnpj     String
  endereco String
  telefone String?

  user    User     @relation("UserOng", fields: [id], references: [id])
  animais Animal[]
}

model Animal {
  id    Int    @id @default(autoincrement())
  nome  String
  tipo  String
  sexo  String
  idade Int
  porte String
  raca  String

  idOng Int
  ong   Ong @relation(fields: [idOng], references: [id])

  adocoes Adocao[] @relation("AnimalAdocoes")
}

model Adocao {
  id              Int      @id @default(autoincrement())
  idAdotante      Int
  idAnimal        Int
  dataSolicitacao DateTime
  status          String

  adotante Adotante @relation(fields: [idAdotante], references: [id], name: "AdotanteAdocoes")
  animal   Animal   @relation(fields: [idAnimal], references: [id], name: "AnimalAdocoes")
}

model Formulario {
  id             Int      @id @default(autoincrement())
  idAdotante     Int
  nomeAdotante   String
  ongResponsavel String
  dataEnvio      DateTime @default(now())
  respostas      Json?    // Campo para armazenar as respostas do formul√°rio

  adotante Adotante @relation(fields: [idAdotante], references: [id])
}
